Imports System.IO
Imports System.Text

Public Class KombineReports
    Public Function CombineRawFileReports(ByVal x As Boolean, ByVal rawfilelist As List(Of String), savefilelocation As String, _
                                          ByVal filedictionary As Dictionary(Of String, List(Of String)), ByVal filedictionary2 As Dictionary(Of String, List(Of String)))
        'This function takes all the RawFileReports generated by the program and combines their results into one file.
        Dim linesplit() As String
        Dim line As String
        Dim FullRawTable As DataTable = New DataTable("FullRaw")
        Dim tagid As DataColumn = New DataColumn()
        Dim filereader As StreamReader
        Dim foundrow As DataRow
        Dim ds As DataSet
        Dim fullreportname As String

        tagid.DataType = System.Type.GetType("System.String")
        tagid.ColumnName = "TagID"
        tagid.Unique = True
        FullRawTable.Columns.Add(tagid)
        Dim total As DataColumn = New DataColumn()
        total.DataType = System.Type.GetType("System.Int32")
        total.ColumnName = "Total"
        FullRawTable.Columns.Add(total)
        Dim zero As DataColumn = New DataColumn()
        zero.DataType = System.Type.GetType("System.Int32")
        zero.ColumnName = "Zero"
        FullRawTable.Columns.Add(zero)
        Dim one As DataColumn = New DataColumn()
        one.DataType = System.Type.GetType("System.Int32")
        one.ColumnName = "One"
        FullRawTable.Columns.Add(one)
        Dim two As DataColumn = New DataColumn()
        two.DataType = System.Type.GetType("System.Int32")
        two.ColumnName = "Two"
        FullRawTable.Columns.Add(two)
        Dim three As DataColumn = New DataColumn()
        three.DataType = System.Type.GetType("System.Int32")
        three.ColumnName = "Three"
        FullRawTable.Columns.Add(three)
        Dim four As DataColumn = New DataColumn()
        four.DataType = System.Type.GetType("System.Int32")
        four.ColumnName = "Four"
        FullRawTable.Columns.Add(four)
        Dim five As DataColumn = New DataColumn()
        five.DataType = System.Type.GetType("System.Int32")
        five.ColumnName = "five"
        FullRawTable.Columns.Add(five)
        Dim six As DataColumn = New DataColumn()
        six.DataType = System.Type.GetType("System.Int32")
        six.ColumnName = "six"
        FullRawTable.Columns.Add(six)
        Dim seven As DataColumn = New DataColumn()
        seven.DataType = System.Type.GetType("System.Int32")
        seven.ColumnName = "seven"
        FullRawTable.Columns.Add(seven)
        Dim eight As DataColumn = New DataColumn()
        eight.DataType = System.Type.GetType("System.Int32")
        eight.ColumnName = "eight"
        FullRawTable.Columns.Add(eight)
        Dim nine As DataColumn = New DataColumn()
        nine.DataType = System.Type.GetType("System.Int32")
        nine.ColumnName = "nine"
        FullRawTable.Columns.Add(nine)
        Dim more As DataColumn = New DataColumn()
        more.DataType = System.Type.GetType("System.Int32")
        more.ColumnName = "more"
        FullRawTable.Columns.Add(more)
        Dim good As DataColumn = New DataColumn()
        good.DataType = System.Type.GetType("System.Int32")
        good.ColumnName = "good"
        FullRawTable.Columns.Add(good)
        Dim bad As DataColumn = New DataColumn()
        bad.DataType = System.Type.GetType("System.Int32")
        bad.ColumnName = "bad"
        FullRawTable.Columns.Add(bad)
        Dim fulldaydata As DataSet = New DataSet()
        fulldaydata.Tables.Add(FullRawTable)
        Dim primarykeycolumns(0) As DataColumn
        primarykeycolumns(0) = FullRawTable.Columns("TagID")
        FullRawTable.PrimaryKey = primarykeycolumns
        Dim taglist As New List(Of String)
        For Each g In rawfilelist
            filereader = My.Computer.FileSystem.OpenTextFileReader(g)
            Do Until filereader.EndOfStream
                line = filereader.ReadLine()
                If line <> "" Then
                    linesplit = line.Split(New [Char]() {","})
                    If Char.IsLetter(linesplit(1)) = False Then
                        If Not taglist.Contains(linesplit(0)) Then
                            taglist.Add(linesplit(0))
                            Dim newrow As DataRow = FullRawTable.NewRow()
                            newrow(tagid) = linesplit(0)
                            newrow(total) = CInt(linesplit(1))
                            newrow(zero) = CInt(linesplit(2))
                            newrow(one) = CInt(linesplit(3))
                            newrow(two) = CInt(linesplit(4))
                            newrow(three) = CInt(linesplit(5))
                            newrow(four) = CInt(linesplit(6))
                            newrow(five) = CInt(linesplit(7))
                            newrow(six) = CInt(linesplit(8))
                            newrow(seven) = CInt(linesplit(9))
                            newrow(eight) = CInt(linesplit(10))
                            newrow(nine) = CInt(linesplit(11))
                            newrow(more) = CInt(linesplit(12))
                            newrow(good) = CInt(linesplit(13))
                            newrow(bad) = CInt(linesplit(14))
                            FullRawTable.Rows.Add(newrow)
                        ElseIf taglist.Contains(linesplit(0)) Then
                            foundrow = FullRawTable.Rows.Find(linesplit(0))
                            foundrow(1) += CInt(linesplit(1))
                            foundrow(2) += CInt(linesplit(2))
                            foundrow(3) += CInt(linesplit(3))
                            foundrow(4) += CInt(linesplit(4))
                            foundrow(5) += CInt(linesplit(5))
                            foundrow(6) += CInt(linesplit(6))
                            foundrow(7) += CInt(linesplit(7))
                            foundrow(8) += CInt(linesplit(8))
                            foundrow(9) += CInt(linesplit(9))
                            foundrow(10) += CInt(linesplit(10))
                            foundrow(11) += CInt(linesplit(11))
                            foundrow(12) += CInt(linesplit(12))
                            foundrow(13) += CInt(linesplit(13))
                            foundrow(14) += CInt(linesplit(14))
                        End If
                    End If
                End If
            Loop
        Next
        Try
            ds = New DataSet()
            ds = FullRawTable.DataSet
            Form1.DataGridView1.DataSource = ds.Tables(0)
            Form1.DataGridView1.Refresh()
        Catch ex2 As Exception
            MsgBox(ex2.ToString)
        End Try
        fullreportname = rawfilelist(0).Substring(0, rawfilelist(0).Length - 4)
        Dim writer As New ReportWriter()
        Dim FullReaderReport As String = writer.WriteCSV(fullreportname, "FullReaderReport", savefilelocation, filedictionary, filedictionary2, rawfilelist)
        Return True
    End Function
    Public Function TotalCTReport(ByVal x As String, ByVal filedictionary As Dictionary(Of String, List(Of String)), _
                                   ByVal filedictionary2 As Dictionary(Of String, List(Of String)), _
                                   ByVal savefilelocation As String, ByVal rawfilelist As List(Of String))

        'This function combines the 4-hour CT reports from a single day into a full-day report.
        'It creates a table in the DataGridView, then calculates the numbers per assetID.

        'This function also generates a full-day report of RepeatsPerXMinutes. It takes all the 4-hour
        'reports of that type for a day and appends them together.

        'It will create a Full-Day Report if there is more than 1 position file processed per given day.
        'Possible tweak: Adjust report names to indicate whether the reports actually covered a full 24-hour period, 
        '                or were shorter amounts of time.

        'TO DO: Run these reports after the last file for a day is processed. Right now, these reports only run when EVERY
        '       FILE in the queue has been processed.

        Dim line As String
        Dim linesplit() As String
        Dim FullDayTable As DataTable = New DataTable("FullDay")
        Dim assetid As DataColumn = New DataColumn()
        Dim filereader As StreamReader
        Dim fullreportname As String
        Dim totalrepeats As Integer = 0
        Dim totalnonrepeats As Integer = 0
        Dim totalCT As Integer = 0
        Dim fulldayrepeats As Integer = 0
        Dim fulldaynonrepeats As Integer = 0
        Dim fulldayct As Integer = 0
        Dim foundrow As DataRow
        Dim CTPercent As Decimal
        Dim ctdictionary As New Dictionary(Of String, Decimal)
        Dim ds As DataSet
        Dim numberofassets As Integer = 0
        Dim tagerrordictionary As New Dictionary(Of String, Decimal)

        assetid.DataType = System.Type.GetType("System.String")
        assetid.ColumnName = "AssetId"
        assetid.Unique = True
        FullDayTable.Columns.Add(assetid)
        Dim tagid As DataColumn = New DataColumn()
        tagid.DataType = System.Type.GetType("System.String")
        tagid.ColumnName = "TagId"
        tagid.Unique = False
        FullDayTable.Columns.Add(tagid)
        Dim repeats As DataColumn = New DataColumn()
        repeats.DataType = System.Type.GetType("System.Int32")
        repeats.ColumnName = "Repeats"
        FullDayTable.Columns.Add(repeats)
        Dim nonrepeats As DataColumn = New DataColumn()
        nonrepeats.DataType = System.Type.GetType("System.Int32")
        nonrepeats.ColumnName = "Non_Repeats"
        FullDayTable.Columns.Add(nonrepeats)
        Dim percentofrepeats As DataColumn = New DataColumn()
        percentofrepeats.DataType = System.Type.GetType("System.Decimal")
        percentofrepeats.ColumnName = "Percent_of_Repeats"
        FullDayTable.Columns.Add(percentofrepeats)
        Dim CT As DataColumn = New DataColumn()
        CT.DataType = System.Type.GetType("System.Int32")
        CT.ColumnName = "Repeats_Resulting_in_CT"
        FullDayTable.Columns.Add(CT)
        Dim percentofCT As DataColumn = New DataColumn()
        percentofCT.DataType = System.Type.GetType("System.Decimal")
        percentofCT.ColumnName = "Percent_of_CT"
        FullDayTable.Columns.Add(percentofCT)
        Dim NCT As DataColumn = New DataColumn()
        NCT.DataType = System.Type.GetType("System.Int32")
        NCT.ColumnName = "Repeats_Not_Resulting_in_CT"
        FullDayTable.Columns.Add(NCT)
        Dim percentofNCT As DataColumn = New DataColumn()
        percentofNCT.DataType = System.Type.GetType("System.Decimal")
        percentofNCT.ColumnName = "Percent_of_NCT"
        FullDayTable.Columns.Add(percentofNCT)
        Dim fulldaydata As DataSet = New DataSet()
        fulldaydata.Tables.Add(FullDayTable)
        Dim primarykeycolumns(0) As DataColumn
        primarykeycolumns(0) = FullDayTable.Columns("AssetId")
        FullDayTable.PrimaryKey = primarykeycolumns
        For Each strKey In filedictionary.Keys()
            Dim keylist = filedictionary(strKey)
            Dim assetlist As New List(Of String)
            For Each strfilename In keylist
                filereader = My.Computer.FileSystem.OpenTextFileReader(strfilename)
                fullreportname = strfilename
                Do Until filereader.EndOfStream
                    line = filereader.ReadLine()
                    If line <> "" Then
                        linesplit = line.Split(New [Char]() {","})
                        If Char.IsLetter(linesplit(1)) = False Then
                            If Not assetlist.Contains(linesplit(0)) Then
                                assetlist.Add(linesplit(0))
                                Dim newrow As DataRow = FullDayTable.NewRow()
                                newrow(assetid) = linesplit(0)
                                newrow(tagid) = linesplit(1)
                                newrow(repeats) = CInt(linesplit(2))
                                newrow(nonrepeats) = CInt(linesplit(3))
                                newrow(percentofrepeats) = Math.Round(1 - (CDec(linesplit(3)) / (CDec((linesplit(2)) + CDec(linesplit(3))))), 4)
                                newrow(CT) = CInt(linesplit(5))
                                If CInt(linesplit(2)) <> 0 Then
                                    newrow(percentofCT) = Math.Round(CDec(linesplit(5)) / CDec(linesplit(2)), 4)
                                ElseIf CInt(linesplit(2)) = 0 Then
                                    newrow(percentofCT) = 0
                                End If
                                newrow(NCT) = CInt(linesplit(7))
                                If CInt(linesplit(2)) <> 0 Then
                                    newrow(percentofNCT) = Math.Round(CDec(linesplit(7)) / CDec(linesplit(2)), 4)
                                ElseIf CInt(linesplit(2)) = 0 Then
                                    newrow(percentofNCT) = 0
                                End If
                                FullDayTable.Rows.Add(newrow)
                                totalrepeats += newrow(2)
                                totalnonrepeats += newrow(3)
                                totalCT += newrow(5)
                                If newrow(4) > 0.2 Then
                                    If Not tagerrordictionary.Keys.Contains(newrow(0)) Then
                                        tagerrordictionary.Add(newrow(0), newrow(4))
                                    ElseIf tagerrordictionary(newrow(assetid)) < newrow(4) Then
                                        tagerrordictionary(newrow(assetid)) = newrow(4)
                                    End If
                                End If
                                fulldayrepeats += newrow(2)
                                fulldaynonrepeats += newrow(3)
                                fulldayct += newrow(5)
                            ElseIf assetlist.Contains(linesplit(0)) Then
                                foundrow = FullDayTable.Rows.Find(linesplit(0))
                                foundrow(2) += CInt(linesplit(2))
                                foundrow(3) += CInt(linesplit(3))
                                If CInt(foundrow(2)) <> 0 Then
                                    foundrow(4) = Math.Round(CDec(foundrow(2)) / (CDec(foundrow(2) + CDec(foundrow(3)))), 4)
                                ElseIf CInt(foundrow(2)) = 0 Then
                                    foundrow(4) = 0
                                End If
                                foundrow(5) += CInt(linesplit(5))
                                If CInt(foundrow(2)) <> 0 Then
                                    foundrow(6) = Math.Round(CDec(foundrow(5)) / CDec(foundrow(2)), 4)
                                ElseIf CInt(foundrow(2)) = 0 Then
                                    foundrow(6) = 0
                                End If
                                foundrow(7) += CInt(linesplit(7))
                                If CInt(foundrow(2)) <> 0 Then
                                    foundrow(8) = Math.Round(CDec(foundrow(7)) / CDec(foundrow(2)), 4)
                                ElseIf CInt(foundrow(2)) = 0 Then
                                    foundrow(8) = 0
                                End If
                                totalrepeats += foundrow(2)
                                totalnonrepeats += foundrow(3)
                                totalCT += foundrow(5)
                                fulldayrepeats += foundrow(2)
                                fulldaynonrepeats += foundrow(3)
                                fulldayct += foundrow(5)
                            End If
                        End If
                    End If
                Loop
                If totalrepeats <> 0 Then
                    CTPercent = Math.Round(CDec((totalnonrepeats + totalCT) / (totalrepeats + totalnonrepeats)), 4) * 100
                    ctdictionary.Add(strfilename, CTPercent)
                    totalCT = 0
                    totalnonrepeats = 0
                    totalrepeats = 0
                End If
            Next
            Try
                ds = New DataSet()
                ds = FullDayTable.DataSet
                Form1.DataGridView1.DataSource = ds.Tables(0)
                Form1.DataGridView1.Refresh()
            Catch ex2 As Exception
                MsgBox(ex2.ToString)
            End Try
            'Dim FulldayReport As String = WriteCSV(fullreportname.Substring(0, fullreportname.Length - 29), "FullDayReport")
            Dim csv As New ReportWriter()
            Dim FulldayReport As String = csv.WriteCSV(fullreportname.Substring(0, fullreportname.Length - 29), "FullDayReport", savefilelocation, filedictionary, filedictionary2, rawfilelist)

            numberofassets = assetlist.Count
            CTPercent = Math.Round(CDec((fulldaynonrepeats + fulldayct) / (fulldayrepeats + fulldaynonrepeats)), 4) * 100
            If Not ctdictionary.ContainsKey(FulldayReport) Then
                ctdictionary.Add(FulldayReport, CTPercent)
            End If
            FullDayTable.Clear()
        Next

        For Each strKey In filedictionary2.Keys()
            Dim str As String = savefilelocation + strKey + "FullDayRepeats.csv"
            Dim keylist = filedictionary2(strKey)
            Dim assetlist As New List(Of String)
            Dim streamwriter As New System.IO.StreamWriter(str)
            Dim headercounter As Int16 = 0
            For Each strfilename In keylist
                filereader = My.Computer.FileSystem.OpenTextFileReader(strfilename)
                fullreportname = strfilename
                Do Until filereader.EndOfStream
                    line = filereader.ReadLine()
                    If line.Contains("T") Then
                        If headercounter < 1 Then
                            streamwriter.WriteLine(line)
                            headercounter += 1
                        End If
                    Else
                        streamwriter.WriteLine(line)
                    End If
                Loop
            Next
            filereader.Close()
            streamwriter.Close()
        Next


        'This bit wraps up the results of the RepeatsNonRepeats report into a quick summary for the user.
        'The user sees the contigual track percent for each 4-hour segment, and the contigual track for the 24-hour day
        'as a whole.
        'Any asset that reported repeat percentages over 20% at any point are also displayed with their repeat percentage.

        'TO DO: Place summary data in a scrollable box. Right now the data is shown in a MsgBox that goes off the edge
        '       of the screen and it can only be closed by clicking the red "X" in the corner.

        Return tagerrordictionary
        My.Computer.Audio.PlaySystemSound(Media.SystemSounds.Exclamation)
        Dim reportbuilder As New StringBuilder()
        If ctdictionary.Count > 0 Then
            For Each strKey In ctdictionary.Keys()
                Dim keylist = ctdictionary(strKey)
                If strKey.Contains("FullDay") Then
                    reportbuilder.AppendLine("File " + Path.GetFileName(strKey) + " had a CT of " + CStr(keylist) + "%")
                Else
                    reportbuilder.AppendLine("File " + Path.GetFileName(strKey).Substring(Path.GetFileName(strKey).Length - 22) + " had a CT of " + CStr(keylist) + "%")
                End If
            Next
            MsgBox(reportbuilder.ToString(), , "Summary")
        End If


    End Function
End Class
